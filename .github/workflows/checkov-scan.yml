name: Checkov Scan (All IaC Files)

on:
  pull_request:
    branches: [ main ]

jobs:
  checkov:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Checkov
        run: pip install checkov

      - name: Create reports directory
        run: mkdir -p checkov_reports

      - name: Run Checkov and Save JSON Report
        run: |
          checkov -d . --output json --soft-fail --output-file checkov_reports/report.json || true

      - name: Debug - Check if JSON report exists
        run: |
          echo "üìÅ Contents of checkov_reports after Checkov run:"
          ls -la checkov_reports/
          echo "üìÑ JSON report contents:"
          cat checkov_reports/report.json || echo "No JSON report found"

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt || echo "No requirements.txt found, skipping..."

      - name: Generate Markdown report from Checkov JSON output
        run: python scripts/generate_md_report.py

      - name: Debug - Check if Markdown report exists
        run: |
          echo "üìÅ Contents of checkov_reports after Markdown generation:"
          ls -la checkov_reports/
          echo "üìÑ Markdown report contents:"
          cat checkov_reports/report.md || echo "No Markdown report found"

      - name: Upload Checkov JSON Report
        uses: actions/upload-artifact@v4
        with:
          name: checkov-json-report
          path: checkov_reports/report.json

      - name: Upload Markdown report
        uses: actions/upload-artifact@v4
        with:
          name: checkov-markdown-report
          path: checkov_reports/report.md

      - name: Comment PR with Report
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = 'checkov_reports/report.md';
            
            if (fs.existsSync(path)) {
              const report = fs.readFileSync(path, 'utf8');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: report
              });
            } else {
              console.log('No markdown report found to comment on PR');
            }