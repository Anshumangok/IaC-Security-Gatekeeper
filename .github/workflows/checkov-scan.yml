name: Checkov Scan (All IaC Files)

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  checkov:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Checkov
        run: pip install checkov

      - name: Create reports directory
        run: mkdir -p checkov_reports

      - name: Run Checkov and Save JSON Report
        run: |
          checkov -d . --output json --soft-fail > checkov_reports/report.json || true
          # Alternative method if above fails
          if [ ! -f checkov_reports/report.json ] || [ ! -s checkov_reports/report.json ]; then
            echo "Trying alternative Checkov command..."
            checkov --directory . --output json --soft-fail --output-file-path checkov_reports/report.json || true
          fi

      - name: Debug - Check if JSON report exists
        run: |
          echo "üìÅ Contents of checkov_reports after Checkov run:"
          ls -la checkov_reports/
          echo "üìÑ JSON report contents:"
          cat checkov_reports/report.json || echo "No JSON report found"

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt || echo "No requirements.txt found, skipping..."

      - name: Generate Markdown report from Checkov JSON output
        run: |
          # Try the robust version first, fall back to original if needed
          if [ -f "scripts/robust_generate_md_report.py" ]; then
            echo "Using robust report generator..."
            python scripts/robust_generate_md_report.py
          else
            echo "Using original report generator..."
            python scripts/generate_md_report.py
          fi

      - name: Debug - Check if Markdown report exists
        run: |
          echo "üìÅ Contents of checkov_reports after Markdown generation:"
          ls -la checkov_reports/
          echo "üìÑ Markdown report contents:"
          cat checkov_reports/report.md || echo "No Markdown report found"

      - name: Upload Checkov JSON Report
        uses: actions/upload-artifact@v4
        with:
          name: checkov-json-report
          path: checkov_reports/report.json

      - name: Upload Markdown report
        uses: actions/upload-artifact@v4
        with:
          name: checkov-markdown-report
          path: checkov_reports/report.md
      
      - name: Upload Fix S3 Script
        uses: actions/upload-artifact@v4
        with:
          name: fix-s3-script
          path: scripts/fix_s3_buckets.py

      - name: Comment PR with Report
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = 'checkov_reports/report.md';
            
            try {
              if (fs.existsSync(path)) {
                const report = fs.readFileSync(path, 'utf8');
                
                // Truncate report if it's too long (GitHub has a limit)
                const maxLength = 65000;
                const finalReport = report.length > maxLength 
                  ? report.substring(0, maxLength) + '\n\n... (Report truncated due to length)'
                  : report;
                
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: finalReport
                });
                console.log('‚úÖ Successfully posted report to PR');
              } else {
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: '‚ùå Checkov scan completed but no report was generated. Check the workflow logs for details.'
                });
                console.log('‚ö†Ô∏è No markdown report found, posted error message');
              }
            } catch (error) {
              console.log('‚ùå Error posting comment:', error.message);
              // Don't fail the entire workflow if commenting fails
            }